// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Robot.proto

#include "Robot.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Robot_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Axis_Robot_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Robot_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Downstream_ClearQueueRobotArm_Robot_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Robot_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Downstream_OneMessage_Robot_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Robot_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Downstream_RequestValues_Robot_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Robot_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Downstream_SetAxisRobotArm_Robot_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Robot_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Upstream_DeviceDescription_Robot_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Robot_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Upstream_OneMessage_Robot_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Robot_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Upstream_ValuesLightSensor_Robot_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Robot_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Upstream_ValuesRobotArm_Robot_2eproto;
namespace robot_control_interface {
class AxisDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Axis> _instance;
} _Axis_default_instance_;
class Upstream_DeviceDescriptionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Upstream_DeviceDescription> _instance;
} _Upstream_DeviceDescription_default_instance_;
class Upstream_ValuesRobotArmDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Upstream_ValuesRobotArm> _instance;
} _Upstream_ValuesRobotArm_default_instance_;
class Upstream_ValuesLightSensorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Upstream_ValuesLightSensor> _instance;
} _Upstream_ValuesLightSensor_default_instance_;
class Upstream_OneMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Upstream_OneMessage> _instance;
  const ::robot_control_interface::Upstream_DeviceDescription* device_description_;
  const ::robot_control_interface::Upstream_ValuesRobotArm* values_robot_arm_;
  const ::robot_control_interface::Upstream_ValuesLightSensor* values_light_sensor_;
  int error_;
} _Upstream_OneMessage_default_instance_;
class UpstreamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Upstream> _instance;
} _Upstream_default_instance_;
class Downstream_RequestValuesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Downstream_RequestValues> _instance;
} _Downstream_RequestValues_default_instance_;
class Downstream_SetAxisRobotArmDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Downstream_SetAxisRobotArm> _instance;
} _Downstream_SetAxisRobotArm_default_instance_;
class Downstream_ClearQueueRobotArmDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Downstream_ClearQueueRobotArm> _instance;
} _Downstream_ClearQueueRobotArm_default_instance_;
class Downstream_OneMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Downstream_OneMessage> _instance;
  const ::robot_control_interface::Downstream_RequestValues* request_values_;
  const ::robot_control_interface::Downstream_SetAxisRobotArm* set_axis_robot_arm_;
  const ::robot_control_interface::Downstream_ClearQueueRobotArm* clear_queue_robot_arm_;
} _Downstream_OneMessage_default_instance_;
class DownstreamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Downstream> _instance;
} _Downstream_default_instance_;
}  // namespace robot_control_interface
static void InitDefaultsscc_info_Axis_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robot_control_interface::_Axis_default_instance_;
    new (ptr) ::robot_control_interface::Axis();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robot_control_interface::Axis::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Axis_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Axis_Robot_2eproto}, {}};

static void InitDefaultsscc_info_Downstream_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robot_control_interface::_Downstream_default_instance_;
    new (ptr) ::robot_control_interface::Downstream();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robot_control_interface::Downstream::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Downstream_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Downstream_Robot_2eproto}, {
      &scc_info_Downstream_OneMessage_Robot_2eproto.base,}};

static void InitDefaultsscc_info_Downstream_ClearQueueRobotArm_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robot_control_interface::_Downstream_ClearQueueRobotArm_default_instance_;
    new (ptr) ::robot_control_interface::Downstream_ClearQueueRobotArm();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robot_control_interface::Downstream_ClearQueueRobotArm::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Downstream_ClearQueueRobotArm_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Downstream_ClearQueueRobotArm_Robot_2eproto}, {}};

static void InitDefaultsscc_info_Downstream_OneMessage_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robot_control_interface::_Downstream_OneMessage_default_instance_;
    new (ptr) ::robot_control_interface::Downstream_OneMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robot_control_interface::Downstream_OneMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Downstream_OneMessage_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Downstream_OneMessage_Robot_2eproto}, {
      &scc_info_Downstream_RequestValues_Robot_2eproto.base,
      &scc_info_Downstream_SetAxisRobotArm_Robot_2eproto.base,
      &scc_info_Downstream_ClearQueueRobotArm_Robot_2eproto.base,}};

static void InitDefaultsscc_info_Downstream_RequestValues_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robot_control_interface::_Downstream_RequestValues_default_instance_;
    new (ptr) ::robot_control_interface::Downstream_RequestValues();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robot_control_interface::Downstream_RequestValues::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Downstream_RequestValues_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Downstream_RequestValues_Robot_2eproto}, {}};

static void InitDefaultsscc_info_Downstream_SetAxisRobotArm_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robot_control_interface::_Downstream_SetAxisRobotArm_default_instance_;
    new (ptr) ::robot_control_interface::Downstream_SetAxisRobotArm();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robot_control_interface::Downstream_SetAxisRobotArm::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Downstream_SetAxisRobotArm_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Downstream_SetAxisRobotArm_Robot_2eproto}, {
      &scc_info_Axis_Robot_2eproto.base,}};

static void InitDefaultsscc_info_Upstream_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robot_control_interface::_Upstream_default_instance_;
    new (ptr) ::robot_control_interface::Upstream();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robot_control_interface::Upstream::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Upstream_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Upstream_Robot_2eproto}, {
      &scc_info_Upstream_OneMessage_Robot_2eproto.base,}};

static void InitDefaultsscc_info_Upstream_DeviceDescription_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robot_control_interface::_Upstream_DeviceDescription_default_instance_;
    new (ptr) ::robot_control_interface::Upstream_DeviceDescription();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robot_control_interface::Upstream_DeviceDescription::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Upstream_DeviceDescription_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Upstream_DeviceDescription_Robot_2eproto}, {}};

static void InitDefaultsscc_info_Upstream_OneMessage_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robot_control_interface::_Upstream_OneMessage_default_instance_;
    new (ptr) ::robot_control_interface::Upstream_OneMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robot_control_interface::Upstream_OneMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Upstream_OneMessage_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Upstream_OneMessage_Robot_2eproto}, {
      &scc_info_Upstream_DeviceDescription_Robot_2eproto.base,
      &scc_info_Upstream_ValuesRobotArm_Robot_2eproto.base,
      &scc_info_Upstream_ValuesLightSensor_Robot_2eproto.base,}};

static void InitDefaultsscc_info_Upstream_ValuesLightSensor_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robot_control_interface::_Upstream_ValuesLightSensor_default_instance_;
    new (ptr) ::robot_control_interface::Upstream_ValuesLightSensor();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robot_control_interface::Upstream_ValuesLightSensor::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Upstream_ValuesLightSensor_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Upstream_ValuesLightSensor_Robot_2eproto}, {}};

static void InitDefaultsscc_info_Upstream_ValuesRobotArm_Robot_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::robot_control_interface::_Upstream_ValuesRobotArm_default_instance_;
    new (ptr) ::robot_control_interface::Upstream_ValuesRobotArm();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::robot_control_interface::Upstream_ValuesRobotArm::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Upstream_ValuesRobotArm_Robot_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Upstream_ValuesRobotArm_Robot_2eproto}, {
      &scc_info_Axis_Robot_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Robot_2eproto[11];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_Robot_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Robot_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Robot_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Axis, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Axis, axis_1_),
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Axis, axis_2_),
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Axis, axis_3_),
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Axis, axis_4_),
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Axis, axis_5_),
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Axis, axis_6_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Upstream_DeviceDescription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Upstream_DeviceDescription, name_),
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Upstream_DeviceDescription, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Upstream_ValuesRobotArm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Upstream_ValuesRobotArm, axis_),
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Upstream_ValuesRobotArm, axis_queue_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Upstream_ValuesLightSensor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Upstream_ValuesLightSensor, light_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Upstream_OneMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Upstream_OneMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Upstream_OneMessage, targetdeviceaddress_),
  offsetof(::robot_control_interface::Upstream_OneMessageDefaultTypeInternal, device_description_),
  offsetof(::robot_control_interface::Upstream_OneMessageDefaultTypeInternal, values_robot_arm_),
  offsetof(::robot_control_interface::Upstream_OneMessageDefaultTypeInternal, values_light_sensor_),
  offsetof(::robot_control_interface::Upstream_OneMessageDefaultTypeInternal, error_),
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Upstream_OneMessage, sub_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Upstream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Upstream, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Downstream_RequestValues, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Downstream_RequestValues, request_values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Downstream_SetAxisRobotArm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Downstream_SetAxisRobotArm, target_axis_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Downstream_ClearQueueRobotArm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Downstream_ClearQueueRobotArm, clear_queue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Downstream_OneMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Downstream_OneMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Downstream_OneMessage, targetdeviceaddress_),
  offsetof(::robot_control_interface::Downstream_OneMessageDefaultTypeInternal, request_values_),
  offsetof(::robot_control_interface::Downstream_OneMessageDefaultTypeInternal, set_axis_robot_arm_),
  offsetof(::robot_control_interface::Downstream_OneMessageDefaultTypeInternal, clear_queue_robot_arm_),
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Downstream_OneMessage, sub_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Downstream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::robot_control_interface::Downstream, message_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::robot_control_interface::Axis)},
  { 11, -1, sizeof(::robot_control_interface::Upstream_DeviceDescription)},
  { 18, -1, sizeof(::robot_control_interface::Upstream_ValuesRobotArm)},
  { 25, -1, sizeof(::robot_control_interface::Upstream_ValuesLightSensor)},
  { 31, -1, sizeof(::robot_control_interface::Upstream_OneMessage)},
  { 42, -1, sizeof(::robot_control_interface::Upstream)},
  { 48, -1, sizeof(::robot_control_interface::Downstream_RequestValues)},
  { 54, -1, sizeof(::robot_control_interface::Downstream_SetAxisRobotArm)},
  { 60, -1, sizeof(::robot_control_interface::Downstream_ClearQueueRobotArm)},
  { 66, -1, sizeof(::robot_control_interface::Downstream_OneMessage)},
  { 76, -1, sizeof(::robot_control_interface::Downstream)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::robot_control_interface::_Axis_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::robot_control_interface::_Upstream_DeviceDescription_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::robot_control_interface::_Upstream_ValuesRobotArm_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::robot_control_interface::_Upstream_ValuesLightSensor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::robot_control_interface::_Upstream_OneMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::robot_control_interface::_Upstream_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::robot_control_interface::_Downstream_RequestValues_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::robot_control_interface::_Downstream_SetAxisRobotArm_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::robot_control_interface::_Downstream_ClearQueueRobotArm_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::robot_control_interface::_Downstream_OneMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::robot_control_interface::_Downstream_default_instance_),
};

const char descriptor_table_protodef_Robot_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013Robot.proto\022\027robot_control_interface\"f"
  "\n\004Axis\022\016\n\006axis_1\030\001 \001(\001\022\016\n\006axis_2\030\002 \001(\001\022\016"
  "\n\006axis_3\030\003 \001(\001\022\016\n\006axis_4\030\004 \001(\001\022\016\n\006axis_5"
  "\030\005 \001(\001\022\016\n\006axis_6\030\006 \001(\001\"\274\005\n\010Upstream\022=\n\007m"
  "essage\030\001 \003(\0132,.robot_control_interface.U"
  "pstream.OneMessage\032T\n\021DeviceDescription\022"
  "\014\n\004name\030\001 \001(\t\0221\n\004type\030\002 \001(\0162#.robot_cont"
  "rol_interface.DeviceType\032V\n\016ValuesRobotA"
  "rm\022+\n\004axis\030\001 \001(\0132\035.robot_control_interfa"
  "ce.Axis\022\027\n\017axis_queue_size\030\002 \001(\005\032\"\n\021Valu"
  "esLightSensor\022\r\n\005light\030\001 \001(\001\032\347\002\n\nOneMess"
  "age\022\033\n\023TargetDeviceAddress\030\001 \001(\r\022Q\n\022devi"
  "ce_description\030\002 \001(\01323.robot_control_int"
  "erface.Upstream.DeviceDescriptionH\000\022L\n\020v"
  "alues_robot_arm\030\003 \001(\01320.robot_control_in"
  "terface.Upstream.ValuesRobotArmH\000\022R\n\023val"
  "ues_light_sensor\030\004 \001(\01323.robot_control_i"
  "nterface.Upstream.ValuesLightSensorH\000\0228\n"
  "\005error\030\005 \001(\0162\'.robot_control_interface.U"
  "pstream.ErrorH\000B\r\n\013sub_message\"5\n\005Error\022"
  "\010\n\004NONE\020\000\022\"\n\036ROBOT_ARM_FAILED_TO_REACH_A"
  "XIS\020\001\"\234\004\n\nDownstream\022\?\n\007message\030\001 \003(\0132.."
  "robot_control_interface.Downstream.OneMe"
  "ssage\032\'\n\rRequestValues\022\026\n\016request_values"
  "\030\001 \001(\010\032E\n\017SetAxisRobotArm\0222\n\013target_axis"
  "\030\001 \001(\0132\035.robot_control_interface.Axis\032)\n"
  "\022ClearQueueRobotArm\022\023\n\013clear_queue\030\001 \001(\010"
  "\032\261\002\n\nOneMessage\022\033\n\023TargetDeviceAddress\030\001"
  " \001(\r\022K\n\016request_values\030\002 \001(\01321.robot_con"
  "trol_interface.Downstream.RequestValuesH"
  "\000\022Q\n\022set_axis_robot_arm\030\003 \001(\01323.robot_co"
  "ntrol_interface.Downstream.SetAxisRobotA"
  "rmH\000\022W\n\025clear_queue_robot_arm\030\004 \001(\01326.ro"
  "bot_control_interface.Downstream.ClearQu"
  "eueRobotArmH\000B\r\n\013sub_message*6\n\nDeviceTy"
  "pe\022\r\n\tROBOT_ARM\020\000\022\020\n\014LIGHT_SENSOR\020\001\022\007\n\003A"
  "LL\020\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Robot_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Robot_2eproto_sccs[11] = {
  &scc_info_Axis_Robot_2eproto.base,
  &scc_info_Downstream_Robot_2eproto.base,
  &scc_info_Downstream_ClearQueueRobotArm_Robot_2eproto.base,
  &scc_info_Downstream_OneMessage_Robot_2eproto.base,
  &scc_info_Downstream_RequestValues_Robot_2eproto.base,
  &scc_info_Downstream_SetAxisRobotArm_Robot_2eproto.base,
  &scc_info_Upstream_Robot_2eproto.base,
  &scc_info_Upstream_DeviceDescription_Robot_2eproto.base,
  &scc_info_Upstream_OneMessage_Robot_2eproto.base,
  &scc_info_Upstream_ValuesLightSensor_Robot_2eproto.base,
  &scc_info_Upstream_ValuesRobotArm_Robot_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Robot_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Robot_2eproto = {
  false, false, descriptor_table_protodef_Robot_2eproto, "Robot.proto", 1452,
  &descriptor_table_Robot_2eproto_once, descriptor_table_Robot_2eproto_sccs, descriptor_table_Robot_2eproto_deps, 11, 0,
  schemas, file_default_instances, TableStruct_Robot_2eproto::offsets,
  file_level_metadata_Robot_2eproto, 11, file_level_enum_descriptors_Robot_2eproto, file_level_service_descriptors_Robot_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Robot_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Robot_2eproto)), true);
namespace robot_control_interface {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Upstream_Error_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Robot_2eproto);
  return file_level_enum_descriptors_Robot_2eproto[0];
}
bool Upstream_Error_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Upstream_Error Upstream::NONE;
constexpr Upstream_Error Upstream::ROBOT_ARM_FAILED_TO_REACH_AXIS;
constexpr Upstream_Error Upstream::Error_MIN;
constexpr Upstream_Error Upstream::Error_MAX;
constexpr int Upstream::Error_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DeviceType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Robot_2eproto);
  return file_level_enum_descriptors_Robot_2eproto[1];
}
bool DeviceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Axis::InitAsDefaultInstance() {
}
class Axis::_Internal {
 public:
};

Axis::Axis(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:robot_control_interface.Axis)
}
Axis::Axis(const Axis& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&axis_1_, &from.axis_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&axis_6_) -
    reinterpret_cast<char*>(&axis_1_)) + sizeof(axis_6_));
  // @@protoc_insertion_point(copy_constructor:robot_control_interface.Axis)
}

void Axis::SharedCtor() {
  ::memset(&axis_1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&axis_6_) -
      reinterpret_cast<char*>(&axis_1_)) + sizeof(axis_6_));
}

Axis::~Axis() {
  // @@protoc_insertion_point(destructor:robot_control_interface.Axis)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Axis::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Axis::ArenaDtor(void* object) {
  Axis* _this = reinterpret_cast< Axis* >(object);
  (void)_this;
}
void Axis::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Axis::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Axis& Axis::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Axis_Robot_2eproto.base);
  return *internal_default_instance();
}


void Axis::Clear() {
// @@protoc_insertion_point(message_clear_start:robot_control_interface.Axis)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&axis_1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&axis_6_) -
      reinterpret_cast<char*>(&axis_1_)) + sizeof(axis_6_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Axis::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double axis_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          axis_1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double axis_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          axis_2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double axis_3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          axis_3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double axis_4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          axis_4_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double axis_5 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          axis_5_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double axis_6 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          axis_6_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Axis::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:robot_control_interface.Axis)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double axis_1 = 1;
  if (!(this->axis_1() <= 0 && this->axis_1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_axis_1(), target);
  }

  // double axis_2 = 2;
  if (!(this->axis_2() <= 0 && this->axis_2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_axis_2(), target);
  }

  // double axis_3 = 3;
  if (!(this->axis_3() <= 0 && this->axis_3() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_axis_3(), target);
  }

  // double axis_4 = 4;
  if (!(this->axis_4() <= 0 && this->axis_4() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_axis_4(), target);
  }

  // double axis_5 = 5;
  if (!(this->axis_5() <= 0 && this->axis_5() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_axis_5(), target);
  }

  // double axis_6 = 6;
  if (!(this->axis_6() <= 0 && this->axis_6() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_axis_6(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robot_control_interface.Axis)
  return target;
}

size_t Axis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robot_control_interface.Axis)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double axis_1 = 1;
  if (!(this->axis_1() <= 0 && this->axis_1() >= 0)) {
    total_size += 1 + 8;
  }

  // double axis_2 = 2;
  if (!(this->axis_2() <= 0 && this->axis_2() >= 0)) {
    total_size += 1 + 8;
  }

  // double axis_3 = 3;
  if (!(this->axis_3() <= 0 && this->axis_3() >= 0)) {
    total_size += 1 + 8;
  }

  // double axis_4 = 4;
  if (!(this->axis_4() <= 0 && this->axis_4() >= 0)) {
    total_size += 1 + 8;
  }

  // double axis_5 = 5;
  if (!(this->axis_5() <= 0 && this->axis_5() >= 0)) {
    total_size += 1 + 8;
  }

  // double axis_6 = 6;
  if (!(this->axis_6() <= 0 && this->axis_6() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Axis::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robot_control_interface.Axis)
  GOOGLE_DCHECK_NE(&from, this);
  const Axis* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Axis>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robot_control_interface.Axis)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robot_control_interface.Axis)
    MergeFrom(*source);
  }
}

void Axis::MergeFrom(const Axis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robot_control_interface.Axis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.axis_1() <= 0 && from.axis_1() >= 0)) {
    _internal_set_axis_1(from._internal_axis_1());
  }
  if (!(from.axis_2() <= 0 && from.axis_2() >= 0)) {
    _internal_set_axis_2(from._internal_axis_2());
  }
  if (!(from.axis_3() <= 0 && from.axis_3() >= 0)) {
    _internal_set_axis_3(from._internal_axis_3());
  }
  if (!(from.axis_4() <= 0 && from.axis_4() >= 0)) {
    _internal_set_axis_4(from._internal_axis_4());
  }
  if (!(from.axis_5() <= 0 && from.axis_5() >= 0)) {
    _internal_set_axis_5(from._internal_axis_5());
  }
  if (!(from.axis_6() <= 0 && from.axis_6() >= 0)) {
    _internal_set_axis_6(from._internal_axis_6());
  }
}

void Axis::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robot_control_interface.Axis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Axis::CopyFrom(const Axis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robot_control_interface.Axis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Axis::IsInitialized() const {
  return true;
}

void Axis::InternalSwap(Axis* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Axis, axis_6_)
      + sizeof(Axis::axis_6_)
      - PROTOBUF_FIELD_OFFSET(Axis, axis_1_)>(
          reinterpret_cast<char*>(&axis_1_),
          reinterpret_cast<char*>(&other->axis_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Axis::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Upstream_DeviceDescription::InitAsDefaultInstance() {
}
class Upstream_DeviceDescription::_Internal {
 public:
};

Upstream_DeviceDescription::Upstream_DeviceDescription(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:robot_control_interface.Upstream.DeviceDescription)
}
Upstream_DeviceDescription::Upstream_DeviceDescription(const Upstream_DeviceDescription& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:robot_control_interface.Upstream.DeviceDescription)
}

void Upstream_DeviceDescription::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Upstream_DeviceDescription_Robot_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

Upstream_DeviceDescription::~Upstream_DeviceDescription() {
  // @@protoc_insertion_point(destructor:robot_control_interface.Upstream.DeviceDescription)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Upstream_DeviceDescription::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Upstream_DeviceDescription::ArenaDtor(void* object) {
  Upstream_DeviceDescription* _this = reinterpret_cast< Upstream_DeviceDescription* >(object);
  (void)_this;
}
void Upstream_DeviceDescription::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Upstream_DeviceDescription::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Upstream_DeviceDescription& Upstream_DeviceDescription::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Upstream_DeviceDescription_Robot_2eproto.base);
  return *internal_default_instance();
}


void Upstream_DeviceDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:robot_control_interface.Upstream.DeviceDescription)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Upstream_DeviceDescription::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "robot_control_interface.Upstream.DeviceDescription.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .robot_control_interface.DeviceType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::robot_control_interface::DeviceType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Upstream_DeviceDescription::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:robot_control_interface.Upstream.DeviceDescription)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "robot_control_interface.Upstream.DeviceDescription.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .robot_control_interface.DeviceType type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robot_control_interface.Upstream.DeviceDescription)
  return target;
}

size_t Upstream_DeviceDescription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robot_control_interface.Upstream.DeviceDescription)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .robot_control_interface.DeviceType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Upstream_DeviceDescription::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robot_control_interface.Upstream.DeviceDescription)
  GOOGLE_DCHECK_NE(&from, this);
  const Upstream_DeviceDescription* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Upstream_DeviceDescription>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robot_control_interface.Upstream.DeviceDescription)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robot_control_interface.Upstream.DeviceDescription)
    MergeFrom(*source);
  }
}

void Upstream_DeviceDescription::MergeFrom(const Upstream_DeviceDescription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robot_control_interface.Upstream.DeviceDescription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void Upstream_DeviceDescription::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robot_control_interface.Upstream.DeviceDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Upstream_DeviceDescription::CopyFrom(const Upstream_DeviceDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robot_control_interface.Upstream.DeviceDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Upstream_DeviceDescription::IsInitialized() const {
  return true;
}

void Upstream_DeviceDescription::InternalSwap(Upstream_DeviceDescription* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Upstream_DeviceDescription::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Upstream_ValuesRobotArm::InitAsDefaultInstance() {
  ::robot_control_interface::_Upstream_ValuesRobotArm_default_instance_._instance.get_mutable()->axis_ = const_cast< ::robot_control_interface::Axis*>(
      ::robot_control_interface::Axis::internal_default_instance());
}
class Upstream_ValuesRobotArm::_Internal {
 public:
  static const ::robot_control_interface::Axis& axis(const Upstream_ValuesRobotArm* msg);
};

const ::robot_control_interface::Axis&
Upstream_ValuesRobotArm::_Internal::axis(const Upstream_ValuesRobotArm* msg) {
  return *msg->axis_;
}
Upstream_ValuesRobotArm::Upstream_ValuesRobotArm(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:robot_control_interface.Upstream.ValuesRobotArm)
}
Upstream_ValuesRobotArm::Upstream_ValuesRobotArm(const Upstream_ValuesRobotArm& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_axis()) {
    axis_ = new ::robot_control_interface::Axis(*from.axis_);
  } else {
    axis_ = nullptr;
  }
  axis_queue_size_ = from.axis_queue_size_;
  // @@protoc_insertion_point(copy_constructor:robot_control_interface.Upstream.ValuesRobotArm)
}

void Upstream_ValuesRobotArm::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Upstream_ValuesRobotArm_Robot_2eproto.base);
  ::memset(&axis_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&axis_queue_size_) -
      reinterpret_cast<char*>(&axis_)) + sizeof(axis_queue_size_));
}

Upstream_ValuesRobotArm::~Upstream_ValuesRobotArm() {
  // @@protoc_insertion_point(destructor:robot_control_interface.Upstream.ValuesRobotArm)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Upstream_ValuesRobotArm::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete axis_;
}

void Upstream_ValuesRobotArm::ArenaDtor(void* object) {
  Upstream_ValuesRobotArm* _this = reinterpret_cast< Upstream_ValuesRobotArm* >(object);
  (void)_this;
}
void Upstream_ValuesRobotArm::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Upstream_ValuesRobotArm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Upstream_ValuesRobotArm& Upstream_ValuesRobotArm::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Upstream_ValuesRobotArm_Robot_2eproto.base);
  return *internal_default_instance();
}


void Upstream_ValuesRobotArm::Clear() {
// @@protoc_insertion_point(message_clear_start:robot_control_interface.Upstream.ValuesRobotArm)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && axis_ != nullptr) {
    delete axis_;
  }
  axis_ = nullptr;
  axis_queue_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Upstream_ValuesRobotArm::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .robot_control_interface.Axis axis = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_axis(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 axis_queue_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          axis_queue_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Upstream_ValuesRobotArm::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:robot_control_interface.Upstream.ValuesRobotArm)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .robot_control_interface.Axis axis = 1;
  if (this->has_axis()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::axis(this), target, stream);
  }

  // int32 axis_queue_size = 2;
  if (this->axis_queue_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_axis_queue_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robot_control_interface.Upstream.ValuesRobotArm)
  return target;
}

size_t Upstream_ValuesRobotArm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robot_control_interface.Upstream.ValuesRobotArm)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .robot_control_interface.Axis axis = 1;
  if (this->has_axis()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *axis_);
  }

  // int32 axis_queue_size = 2;
  if (this->axis_queue_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_axis_queue_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Upstream_ValuesRobotArm::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robot_control_interface.Upstream.ValuesRobotArm)
  GOOGLE_DCHECK_NE(&from, this);
  const Upstream_ValuesRobotArm* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Upstream_ValuesRobotArm>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robot_control_interface.Upstream.ValuesRobotArm)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robot_control_interface.Upstream.ValuesRobotArm)
    MergeFrom(*source);
  }
}

void Upstream_ValuesRobotArm::MergeFrom(const Upstream_ValuesRobotArm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robot_control_interface.Upstream.ValuesRobotArm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_axis()) {
    _internal_mutable_axis()->::robot_control_interface::Axis::MergeFrom(from._internal_axis());
  }
  if (from.axis_queue_size() != 0) {
    _internal_set_axis_queue_size(from._internal_axis_queue_size());
  }
}

void Upstream_ValuesRobotArm::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robot_control_interface.Upstream.ValuesRobotArm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Upstream_ValuesRobotArm::CopyFrom(const Upstream_ValuesRobotArm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robot_control_interface.Upstream.ValuesRobotArm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Upstream_ValuesRobotArm::IsInitialized() const {
  return true;
}

void Upstream_ValuesRobotArm::InternalSwap(Upstream_ValuesRobotArm* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Upstream_ValuesRobotArm, axis_queue_size_)
      + sizeof(Upstream_ValuesRobotArm::axis_queue_size_)
      - PROTOBUF_FIELD_OFFSET(Upstream_ValuesRobotArm, axis_)>(
          reinterpret_cast<char*>(&axis_),
          reinterpret_cast<char*>(&other->axis_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Upstream_ValuesRobotArm::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Upstream_ValuesLightSensor::InitAsDefaultInstance() {
}
class Upstream_ValuesLightSensor::_Internal {
 public:
};

Upstream_ValuesLightSensor::Upstream_ValuesLightSensor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:robot_control_interface.Upstream.ValuesLightSensor)
}
Upstream_ValuesLightSensor::Upstream_ValuesLightSensor(const Upstream_ValuesLightSensor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  light_ = from.light_;
  // @@protoc_insertion_point(copy_constructor:robot_control_interface.Upstream.ValuesLightSensor)
}

void Upstream_ValuesLightSensor::SharedCtor() {
  light_ = 0;
}

Upstream_ValuesLightSensor::~Upstream_ValuesLightSensor() {
  // @@protoc_insertion_point(destructor:robot_control_interface.Upstream.ValuesLightSensor)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Upstream_ValuesLightSensor::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Upstream_ValuesLightSensor::ArenaDtor(void* object) {
  Upstream_ValuesLightSensor* _this = reinterpret_cast< Upstream_ValuesLightSensor* >(object);
  (void)_this;
}
void Upstream_ValuesLightSensor::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Upstream_ValuesLightSensor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Upstream_ValuesLightSensor& Upstream_ValuesLightSensor::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Upstream_ValuesLightSensor_Robot_2eproto.base);
  return *internal_default_instance();
}


void Upstream_ValuesLightSensor::Clear() {
// @@protoc_insertion_point(message_clear_start:robot_control_interface.Upstream.ValuesLightSensor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  light_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Upstream_ValuesLightSensor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double light = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          light_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Upstream_ValuesLightSensor::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:robot_control_interface.Upstream.ValuesLightSensor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double light = 1;
  if (!(this->light() <= 0 && this->light() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_light(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robot_control_interface.Upstream.ValuesLightSensor)
  return target;
}

size_t Upstream_ValuesLightSensor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robot_control_interface.Upstream.ValuesLightSensor)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double light = 1;
  if (!(this->light() <= 0 && this->light() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Upstream_ValuesLightSensor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robot_control_interface.Upstream.ValuesLightSensor)
  GOOGLE_DCHECK_NE(&from, this);
  const Upstream_ValuesLightSensor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Upstream_ValuesLightSensor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robot_control_interface.Upstream.ValuesLightSensor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robot_control_interface.Upstream.ValuesLightSensor)
    MergeFrom(*source);
  }
}

void Upstream_ValuesLightSensor::MergeFrom(const Upstream_ValuesLightSensor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robot_control_interface.Upstream.ValuesLightSensor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.light() <= 0 && from.light() >= 0)) {
    _internal_set_light(from._internal_light());
  }
}

void Upstream_ValuesLightSensor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robot_control_interface.Upstream.ValuesLightSensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Upstream_ValuesLightSensor::CopyFrom(const Upstream_ValuesLightSensor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robot_control_interface.Upstream.ValuesLightSensor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Upstream_ValuesLightSensor::IsInitialized() const {
  return true;
}

void Upstream_ValuesLightSensor::InternalSwap(Upstream_ValuesLightSensor* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(light_, other->light_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Upstream_ValuesLightSensor::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Upstream_OneMessage::InitAsDefaultInstance() {
  ::robot_control_interface::_Upstream_OneMessage_default_instance_.device_description_ = const_cast< ::robot_control_interface::Upstream_DeviceDescription*>(
      ::robot_control_interface::Upstream_DeviceDescription::internal_default_instance());
  ::robot_control_interface::_Upstream_OneMessage_default_instance_.values_robot_arm_ = const_cast< ::robot_control_interface::Upstream_ValuesRobotArm*>(
      ::robot_control_interface::Upstream_ValuesRobotArm::internal_default_instance());
  ::robot_control_interface::_Upstream_OneMessage_default_instance_.values_light_sensor_ = const_cast< ::robot_control_interface::Upstream_ValuesLightSensor*>(
      ::robot_control_interface::Upstream_ValuesLightSensor::internal_default_instance());
  ::robot_control_interface::_Upstream_OneMessage_default_instance_.error_ = 0;
}
class Upstream_OneMessage::_Internal {
 public:
  static const ::robot_control_interface::Upstream_DeviceDescription& device_description(const Upstream_OneMessage* msg);
  static const ::robot_control_interface::Upstream_ValuesRobotArm& values_robot_arm(const Upstream_OneMessage* msg);
  static const ::robot_control_interface::Upstream_ValuesLightSensor& values_light_sensor(const Upstream_OneMessage* msg);
};

const ::robot_control_interface::Upstream_DeviceDescription&
Upstream_OneMessage::_Internal::device_description(const Upstream_OneMessage* msg) {
  return *msg->sub_message_.device_description_;
}
const ::robot_control_interface::Upstream_ValuesRobotArm&
Upstream_OneMessage::_Internal::values_robot_arm(const Upstream_OneMessage* msg) {
  return *msg->sub_message_.values_robot_arm_;
}
const ::robot_control_interface::Upstream_ValuesLightSensor&
Upstream_OneMessage::_Internal::values_light_sensor(const Upstream_OneMessage* msg) {
  return *msg->sub_message_.values_light_sensor_;
}
void Upstream_OneMessage::set_allocated_device_description(::robot_control_interface::Upstream_DeviceDescription* device_description) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_sub_message();
  if (device_description) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(device_description);
    if (message_arena != submessage_arena) {
      device_description = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, device_description, submessage_arena);
    }
    set_has_device_description();
    sub_message_.device_description_ = device_description;
  }
  // @@protoc_insertion_point(field_set_allocated:robot_control_interface.Upstream.OneMessage.device_description)
}
void Upstream_OneMessage::set_allocated_values_robot_arm(::robot_control_interface::Upstream_ValuesRobotArm* values_robot_arm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_sub_message();
  if (values_robot_arm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(values_robot_arm);
    if (message_arena != submessage_arena) {
      values_robot_arm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, values_robot_arm, submessage_arena);
    }
    set_has_values_robot_arm();
    sub_message_.values_robot_arm_ = values_robot_arm;
  }
  // @@protoc_insertion_point(field_set_allocated:robot_control_interface.Upstream.OneMessage.values_robot_arm)
}
void Upstream_OneMessage::set_allocated_values_light_sensor(::robot_control_interface::Upstream_ValuesLightSensor* values_light_sensor) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_sub_message();
  if (values_light_sensor) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(values_light_sensor);
    if (message_arena != submessage_arena) {
      values_light_sensor = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, values_light_sensor, submessage_arena);
    }
    set_has_values_light_sensor();
    sub_message_.values_light_sensor_ = values_light_sensor;
  }
  // @@protoc_insertion_point(field_set_allocated:robot_control_interface.Upstream.OneMessage.values_light_sensor)
}
Upstream_OneMessage::Upstream_OneMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:robot_control_interface.Upstream.OneMessage)
}
Upstream_OneMessage::Upstream_OneMessage(const Upstream_OneMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  targetdeviceaddress_ = from.targetdeviceaddress_;
  clear_has_sub_message();
  switch (from.sub_message_case()) {
    case kDeviceDescription: {
      _internal_mutable_device_description()->::robot_control_interface::Upstream_DeviceDescription::MergeFrom(from._internal_device_description());
      break;
    }
    case kValuesRobotArm: {
      _internal_mutable_values_robot_arm()->::robot_control_interface::Upstream_ValuesRobotArm::MergeFrom(from._internal_values_robot_arm());
      break;
    }
    case kValuesLightSensor: {
      _internal_mutable_values_light_sensor()->::robot_control_interface::Upstream_ValuesLightSensor::MergeFrom(from._internal_values_light_sensor());
      break;
    }
    case kError: {
      _internal_set_error(from._internal_error());
      break;
    }
    case SUB_MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:robot_control_interface.Upstream.OneMessage)
}

void Upstream_OneMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Upstream_OneMessage_Robot_2eproto.base);
  targetdeviceaddress_ = 0u;
  clear_has_sub_message();
}

Upstream_OneMessage::~Upstream_OneMessage() {
  // @@protoc_insertion_point(destructor:robot_control_interface.Upstream.OneMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Upstream_OneMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_sub_message()) {
    clear_sub_message();
  }
}

void Upstream_OneMessage::ArenaDtor(void* object) {
  Upstream_OneMessage* _this = reinterpret_cast< Upstream_OneMessage* >(object);
  (void)_this;
}
void Upstream_OneMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Upstream_OneMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Upstream_OneMessage& Upstream_OneMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Upstream_OneMessage_Robot_2eproto.base);
  return *internal_default_instance();
}


void Upstream_OneMessage::clear_sub_message() {
// @@protoc_insertion_point(one_of_clear_start:robot_control_interface.Upstream.OneMessage)
  switch (sub_message_case()) {
    case kDeviceDescription: {
      if (GetArena() == nullptr) {
        delete sub_message_.device_description_;
      }
      break;
    }
    case kValuesRobotArm: {
      if (GetArena() == nullptr) {
        delete sub_message_.values_robot_arm_;
      }
      break;
    }
    case kValuesLightSensor: {
      if (GetArena() == nullptr) {
        delete sub_message_.values_light_sensor_;
      }
      break;
    }
    case kError: {
      // No need to clear
      break;
    }
    case SUB_MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SUB_MESSAGE_NOT_SET;
}


void Upstream_OneMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:robot_control_interface.Upstream.OneMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetdeviceaddress_ = 0u;
  clear_sub_message();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Upstream_OneMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 TargetDeviceAddress = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          targetdeviceaddress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .robot_control_interface.Upstream.DeviceDescription device_description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_device_description(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .robot_control_interface.Upstream.ValuesRobotArm values_robot_arm = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_values_robot_arm(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .robot_control_interface.Upstream.ValuesLightSensor values_light_sensor = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_values_light_sensor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .robot_control_interface.Upstream.Error error = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_error(static_cast<::robot_control_interface::Upstream_Error>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Upstream_OneMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:robot_control_interface.Upstream.OneMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TargetDeviceAddress = 1;
  if (this->targetdeviceaddress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_targetdeviceaddress(), target);
  }

  // .robot_control_interface.Upstream.DeviceDescription device_description = 2;
  if (_internal_has_device_description()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::device_description(this), target, stream);
  }

  // .robot_control_interface.Upstream.ValuesRobotArm values_robot_arm = 3;
  if (_internal_has_values_robot_arm()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::values_robot_arm(this), target, stream);
  }

  // .robot_control_interface.Upstream.ValuesLightSensor values_light_sensor = 4;
  if (_internal_has_values_light_sensor()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::values_light_sensor(this), target, stream);
  }

  // .robot_control_interface.Upstream.Error error = 5;
  if (_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robot_control_interface.Upstream.OneMessage)
  return target;
}

size_t Upstream_OneMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robot_control_interface.Upstream.OneMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 TargetDeviceAddress = 1;
  if (this->targetdeviceaddress() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_targetdeviceaddress());
  }

  switch (sub_message_case()) {
    // .robot_control_interface.Upstream.DeviceDescription device_description = 2;
    case kDeviceDescription: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sub_message_.device_description_);
      break;
    }
    // .robot_control_interface.Upstream.ValuesRobotArm values_robot_arm = 3;
    case kValuesRobotArm: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sub_message_.values_robot_arm_);
      break;
    }
    // .robot_control_interface.Upstream.ValuesLightSensor values_light_sensor = 4;
    case kValuesLightSensor: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sub_message_.values_light_sensor_);
      break;
    }
    // .robot_control_interface.Upstream.Error error = 5;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_error());
      break;
    }
    case SUB_MESSAGE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Upstream_OneMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robot_control_interface.Upstream.OneMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Upstream_OneMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Upstream_OneMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robot_control_interface.Upstream.OneMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robot_control_interface.Upstream.OneMessage)
    MergeFrom(*source);
  }
}

void Upstream_OneMessage::MergeFrom(const Upstream_OneMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robot_control_interface.Upstream.OneMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetdeviceaddress() != 0) {
    _internal_set_targetdeviceaddress(from._internal_targetdeviceaddress());
  }
  switch (from.sub_message_case()) {
    case kDeviceDescription: {
      _internal_mutable_device_description()->::robot_control_interface::Upstream_DeviceDescription::MergeFrom(from._internal_device_description());
      break;
    }
    case kValuesRobotArm: {
      _internal_mutable_values_robot_arm()->::robot_control_interface::Upstream_ValuesRobotArm::MergeFrom(from._internal_values_robot_arm());
      break;
    }
    case kValuesLightSensor: {
      _internal_mutable_values_light_sensor()->::robot_control_interface::Upstream_ValuesLightSensor::MergeFrom(from._internal_values_light_sensor());
      break;
    }
    case kError: {
      _internal_set_error(from._internal_error());
      break;
    }
    case SUB_MESSAGE_NOT_SET: {
      break;
    }
  }
}

void Upstream_OneMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robot_control_interface.Upstream.OneMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Upstream_OneMessage::CopyFrom(const Upstream_OneMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robot_control_interface.Upstream.OneMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Upstream_OneMessage::IsInitialized() const {
  return true;
}

void Upstream_OneMessage::InternalSwap(Upstream_OneMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(targetdeviceaddress_, other->targetdeviceaddress_);
  swap(sub_message_, other->sub_message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Upstream_OneMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Upstream::InitAsDefaultInstance() {
}
class Upstream::_Internal {
 public:
};

Upstream::Upstream(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  message_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:robot_control_interface.Upstream)
}
Upstream::Upstream(const Upstream& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      message_(from.message_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:robot_control_interface.Upstream)
}

void Upstream::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Upstream_Robot_2eproto.base);
}

Upstream::~Upstream() {
  // @@protoc_insertion_point(destructor:robot_control_interface.Upstream)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Upstream::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Upstream::ArenaDtor(void* object) {
  Upstream* _this = reinterpret_cast< Upstream* >(object);
  (void)_this;
}
void Upstream::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Upstream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Upstream& Upstream::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Upstream_Robot_2eproto.base);
  return *internal_default_instance();
}


void Upstream::Clear() {
// @@protoc_insertion_point(message_clear_start:robot_control_interface.Upstream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Upstream::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .robot_control_interface.Upstream.OneMessage message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_message(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Upstream::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:robot_control_interface.Upstream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .robot_control_interface.Upstream.OneMessage message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_message_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_message(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robot_control_interface.Upstream)
  return target;
}

size_t Upstream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robot_control_interface.Upstream)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .robot_control_interface.Upstream.OneMessage message = 1;
  total_size += 1UL * this->_internal_message_size();
  for (const auto& msg : this->message_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Upstream::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robot_control_interface.Upstream)
  GOOGLE_DCHECK_NE(&from, this);
  const Upstream* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Upstream>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robot_control_interface.Upstream)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robot_control_interface.Upstream)
    MergeFrom(*source);
  }
}

void Upstream::MergeFrom(const Upstream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robot_control_interface.Upstream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  message_.MergeFrom(from.message_);
}

void Upstream::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robot_control_interface.Upstream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Upstream::CopyFrom(const Upstream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robot_control_interface.Upstream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Upstream::IsInitialized() const {
  return true;
}

void Upstream::InternalSwap(Upstream* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.InternalSwap(&other->message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Upstream::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Downstream_RequestValues::InitAsDefaultInstance() {
}
class Downstream_RequestValues::_Internal {
 public:
};

Downstream_RequestValues::Downstream_RequestValues(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:robot_control_interface.Downstream.RequestValues)
}
Downstream_RequestValues::Downstream_RequestValues(const Downstream_RequestValues& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  request_values_ = from.request_values_;
  // @@protoc_insertion_point(copy_constructor:robot_control_interface.Downstream.RequestValues)
}

void Downstream_RequestValues::SharedCtor() {
  request_values_ = false;
}

Downstream_RequestValues::~Downstream_RequestValues() {
  // @@protoc_insertion_point(destructor:robot_control_interface.Downstream.RequestValues)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Downstream_RequestValues::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Downstream_RequestValues::ArenaDtor(void* object) {
  Downstream_RequestValues* _this = reinterpret_cast< Downstream_RequestValues* >(object);
  (void)_this;
}
void Downstream_RequestValues::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Downstream_RequestValues::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Downstream_RequestValues& Downstream_RequestValues::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Downstream_RequestValues_Robot_2eproto.base);
  return *internal_default_instance();
}


void Downstream_RequestValues::Clear() {
// @@protoc_insertion_point(message_clear_start:robot_control_interface.Downstream.RequestValues)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_values_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Downstream_RequestValues::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool request_values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          request_values_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Downstream_RequestValues::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:robot_control_interface.Downstream.RequestValues)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool request_values = 1;
  if (this->request_values() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_request_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robot_control_interface.Downstream.RequestValues)
  return target;
}

size_t Downstream_RequestValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robot_control_interface.Downstream.RequestValues)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool request_values = 1;
  if (this->request_values() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Downstream_RequestValues::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robot_control_interface.Downstream.RequestValues)
  GOOGLE_DCHECK_NE(&from, this);
  const Downstream_RequestValues* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Downstream_RequestValues>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robot_control_interface.Downstream.RequestValues)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robot_control_interface.Downstream.RequestValues)
    MergeFrom(*source);
  }
}

void Downstream_RequestValues::MergeFrom(const Downstream_RequestValues& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robot_control_interface.Downstream.RequestValues)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.request_values() != 0) {
    _internal_set_request_values(from._internal_request_values());
  }
}

void Downstream_RequestValues::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robot_control_interface.Downstream.RequestValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Downstream_RequestValues::CopyFrom(const Downstream_RequestValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robot_control_interface.Downstream.RequestValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Downstream_RequestValues::IsInitialized() const {
  return true;
}

void Downstream_RequestValues::InternalSwap(Downstream_RequestValues* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(request_values_, other->request_values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Downstream_RequestValues::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Downstream_SetAxisRobotArm::InitAsDefaultInstance() {
  ::robot_control_interface::_Downstream_SetAxisRobotArm_default_instance_._instance.get_mutable()->target_axis_ = const_cast< ::robot_control_interface::Axis*>(
      ::robot_control_interface::Axis::internal_default_instance());
}
class Downstream_SetAxisRobotArm::_Internal {
 public:
  static const ::robot_control_interface::Axis& target_axis(const Downstream_SetAxisRobotArm* msg);
};

const ::robot_control_interface::Axis&
Downstream_SetAxisRobotArm::_Internal::target_axis(const Downstream_SetAxisRobotArm* msg) {
  return *msg->target_axis_;
}
Downstream_SetAxisRobotArm::Downstream_SetAxisRobotArm(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:robot_control_interface.Downstream.SetAxisRobotArm)
}
Downstream_SetAxisRobotArm::Downstream_SetAxisRobotArm(const Downstream_SetAxisRobotArm& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_target_axis()) {
    target_axis_ = new ::robot_control_interface::Axis(*from.target_axis_);
  } else {
    target_axis_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:robot_control_interface.Downstream.SetAxisRobotArm)
}

void Downstream_SetAxisRobotArm::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Downstream_SetAxisRobotArm_Robot_2eproto.base);
  target_axis_ = nullptr;
}

Downstream_SetAxisRobotArm::~Downstream_SetAxisRobotArm() {
  // @@protoc_insertion_point(destructor:robot_control_interface.Downstream.SetAxisRobotArm)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Downstream_SetAxisRobotArm::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete target_axis_;
}

void Downstream_SetAxisRobotArm::ArenaDtor(void* object) {
  Downstream_SetAxisRobotArm* _this = reinterpret_cast< Downstream_SetAxisRobotArm* >(object);
  (void)_this;
}
void Downstream_SetAxisRobotArm::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Downstream_SetAxisRobotArm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Downstream_SetAxisRobotArm& Downstream_SetAxisRobotArm::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Downstream_SetAxisRobotArm_Robot_2eproto.base);
  return *internal_default_instance();
}


void Downstream_SetAxisRobotArm::Clear() {
// @@protoc_insertion_point(message_clear_start:robot_control_interface.Downstream.SetAxisRobotArm)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && target_axis_ != nullptr) {
    delete target_axis_;
  }
  target_axis_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Downstream_SetAxisRobotArm::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .robot_control_interface.Axis target_axis = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_target_axis(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Downstream_SetAxisRobotArm::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:robot_control_interface.Downstream.SetAxisRobotArm)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .robot_control_interface.Axis target_axis = 1;
  if (this->has_target_axis()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::target_axis(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robot_control_interface.Downstream.SetAxisRobotArm)
  return target;
}

size_t Downstream_SetAxisRobotArm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robot_control_interface.Downstream.SetAxisRobotArm)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .robot_control_interface.Axis target_axis = 1;
  if (this->has_target_axis()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_axis_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Downstream_SetAxisRobotArm::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robot_control_interface.Downstream.SetAxisRobotArm)
  GOOGLE_DCHECK_NE(&from, this);
  const Downstream_SetAxisRobotArm* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Downstream_SetAxisRobotArm>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robot_control_interface.Downstream.SetAxisRobotArm)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robot_control_interface.Downstream.SetAxisRobotArm)
    MergeFrom(*source);
  }
}

void Downstream_SetAxisRobotArm::MergeFrom(const Downstream_SetAxisRobotArm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robot_control_interface.Downstream.SetAxisRobotArm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_axis()) {
    _internal_mutable_target_axis()->::robot_control_interface::Axis::MergeFrom(from._internal_target_axis());
  }
}

void Downstream_SetAxisRobotArm::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robot_control_interface.Downstream.SetAxisRobotArm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Downstream_SetAxisRobotArm::CopyFrom(const Downstream_SetAxisRobotArm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robot_control_interface.Downstream.SetAxisRobotArm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Downstream_SetAxisRobotArm::IsInitialized() const {
  return true;
}

void Downstream_SetAxisRobotArm::InternalSwap(Downstream_SetAxisRobotArm* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(target_axis_, other->target_axis_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Downstream_SetAxisRobotArm::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Downstream_ClearQueueRobotArm::InitAsDefaultInstance() {
}
class Downstream_ClearQueueRobotArm::_Internal {
 public:
};

Downstream_ClearQueueRobotArm::Downstream_ClearQueueRobotArm(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:robot_control_interface.Downstream.ClearQueueRobotArm)
}
Downstream_ClearQueueRobotArm::Downstream_ClearQueueRobotArm(const Downstream_ClearQueueRobotArm& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_queue_ = from.clear_queue_;
  // @@protoc_insertion_point(copy_constructor:robot_control_interface.Downstream.ClearQueueRobotArm)
}

void Downstream_ClearQueueRobotArm::SharedCtor() {
  clear_queue_ = false;
}

Downstream_ClearQueueRobotArm::~Downstream_ClearQueueRobotArm() {
  // @@protoc_insertion_point(destructor:robot_control_interface.Downstream.ClearQueueRobotArm)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Downstream_ClearQueueRobotArm::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Downstream_ClearQueueRobotArm::ArenaDtor(void* object) {
  Downstream_ClearQueueRobotArm* _this = reinterpret_cast< Downstream_ClearQueueRobotArm* >(object);
  (void)_this;
}
void Downstream_ClearQueueRobotArm::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Downstream_ClearQueueRobotArm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Downstream_ClearQueueRobotArm& Downstream_ClearQueueRobotArm::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Downstream_ClearQueueRobotArm_Robot_2eproto.base);
  return *internal_default_instance();
}


void Downstream_ClearQueueRobotArm::Clear() {
// @@protoc_insertion_point(message_clear_start:robot_control_interface.Downstream.ClearQueueRobotArm)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_queue_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Downstream_ClearQueueRobotArm::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool clear_queue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          clear_queue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Downstream_ClearQueueRobotArm::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:robot_control_interface.Downstream.ClearQueueRobotArm)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool clear_queue = 1;
  if (this->clear_queue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_clear_queue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robot_control_interface.Downstream.ClearQueueRobotArm)
  return target;
}

size_t Downstream_ClearQueueRobotArm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robot_control_interface.Downstream.ClearQueueRobotArm)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool clear_queue = 1;
  if (this->clear_queue() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Downstream_ClearQueueRobotArm::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robot_control_interface.Downstream.ClearQueueRobotArm)
  GOOGLE_DCHECK_NE(&from, this);
  const Downstream_ClearQueueRobotArm* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Downstream_ClearQueueRobotArm>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robot_control_interface.Downstream.ClearQueueRobotArm)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robot_control_interface.Downstream.ClearQueueRobotArm)
    MergeFrom(*source);
  }
}

void Downstream_ClearQueueRobotArm::MergeFrom(const Downstream_ClearQueueRobotArm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robot_control_interface.Downstream.ClearQueueRobotArm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clear_queue() != 0) {
    _internal_set_clear_queue(from._internal_clear_queue());
  }
}

void Downstream_ClearQueueRobotArm::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robot_control_interface.Downstream.ClearQueueRobotArm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Downstream_ClearQueueRobotArm::CopyFrom(const Downstream_ClearQueueRobotArm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robot_control_interface.Downstream.ClearQueueRobotArm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Downstream_ClearQueueRobotArm::IsInitialized() const {
  return true;
}

void Downstream_ClearQueueRobotArm::InternalSwap(Downstream_ClearQueueRobotArm* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(clear_queue_, other->clear_queue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Downstream_ClearQueueRobotArm::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Downstream_OneMessage::InitAsDefaultInstance() {
  ::robot_control_interface::_Downstream_OneMessage_default_instance_.request_values_ = const_cast< ::robot_control_interface::Downstream_RequestValues*>(
      ::robot_control_interface::Downstream_RequestValues::internal_default_instance());
  ::robot_control_interface::_Downstream_OneMessage_default_instance_.set_axis_robot_arm_ = const_cast< ::robot_control_interface::Downstream_SetAxisRobotArm*>(
      ::robot_control_interface::Downstream_SetAxisRobotArm::internal_default_instance());
  ::robot_control_interface::_Downstream_OneMessage_default_instance_.clear_queue_robot_arm_ = const_cast< ::robot_control_interface::Downstream_ClearQueueRobotArm*>(
      ::robot_control_interface::Downstream_ClearQueueRobotArm::internal_default_instance());
}
class Downstream_OneMessage::_Internal {
 public:
  static const ::robot_control_interface::Downstream_RequestValues& request_values(const Downstream_OneMessage* msg);
  static const ::robot_control_interface::Downstream_SetAxisRobotArm& set_axis_robot_arm(const Downstream_OneMessage* msg);
  static const ::robot_control_interface::Downstream_ClearQueueRobotArm& clear_queue_robot_arm(const Downstream_OneMessage* msg);
};

const ::robot_control_interface::Downstream_RequestValues&
Downstream_OneMessage::_Internal::request_values(const Downstream_OneMessage* msg) {
  return *msg->sub_message_.request_values_;
}
const ::robot_control_interface::Downstream_SetAxisRobotArm&
Downstream_OneMessage::_Internal::set_axis_robot_arm(const Downstream_OneMessage* msg) {
  return *msg->sub_message_.set_axis_robot_arm_;
}
const ::robot_control_interface::Downstream_ClearQueueRobotArm&
Downstream_OneMessage::_Internal::clear_queue_robot_arm(const Downstream_OneMessage* msg) {
  return *msg->sub_message_.clear_queue_robot_arm_;
}
void Downstream_OneMessage::set_allocated_request_values(::robot_control_interface::Downstream_RequestValues* request_values) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_sub_message();
  if (request_values) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(request_values);
    if (message_arena != submessage_arena) {
      request_values = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, request_values, submessage_arena);
    }
    set_has_request_values();
    sub_message_.request_values_ = request_values;
  }
  // @@protoc_insertion_point(field_set_allocated:robot_control_interface.Downstream.OneMessage.request_values)
}
void Downstream_OneMessage::set_allocated_set_axis_robot_arm(::robot_control_interface::Downstream_SetAxisRobotArm* set_axis_robot_arm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_sub_message();
  if (set_axis_robot_arm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(set_axis_robot_arm);
    if (message_arena != submessage_arena) {
      set_axis_robot_arm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, set_axis_robot_arm, submessage_arena);
    }
    set_has_set_axis_robot_arm();
    sub_message_.set_axis_robot_arm_ = set_axis_robot_arm;
  }
  // @@protoc_insertion_point(field_set_allocated:robot_control_interface.Downstream.OneMessage.set_axis_robot_arm)
}
void Downstream_OneMessage::set_allocated_clear_queue_robot_arm(::robot_control_interface::Downstream_ClearQueueRobotArm* clear_queue_robot_arm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_sub_message();
  if (clear_queue_robot_arm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(clear_queue_robot_arm);
    if (message_arena != submessage_arena) {
      clear_queue_robot_arm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, clear_queue_robot_arm, submessage_arena);
    }
    set_has_clear_queue_robot_arm();
    sub_message_.clear_queue_robot_arm_ = clear_queue_robot_arm;
  }
  // @@protoc_insertion_point(field_set_allocated:robot_control_interface.Downstream.OneMessage.clear_queue_robot_arm)
}
Downstream_OneMessage::Downstream_OneMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:robot_control_interface.Downstream.OneMessage)
}
Downstream_OneMessage::Downstream_OneMessage(const Downstream_OneMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  targetdeviceaddress_ = from.targetdeviceaddress_;
  clear_has_sub_message();
  switch (from.sub_message_case()) {
    case kRequestValues: {
      _internal_mutable_request_values()->::robot_control_interface::Downstream_RequestValues::MergeFrom(from._internal_request_values());
      break;
    }
    case kSetAxisRobotArm: {
      _internal_mutable_set_axis_robot_arm()->::robot_control_interface::Downstream_SetAxisRobotArm::MergeFrom(from._internal_set_axis_robot_arm());
      break;
    }
    case kClearQueueRobotArm: {
      _internal_mutable_clear_queue_robot_arm()->::robot_control_interface::Downstream_ClearQueueRobotArm::MergeFrom(from._internal_clear_queue_robot_arm());
      break;
    }
    case SUB_MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:robot_control_interface.Downstream.OneMessage)
}

void Downstream_OneMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Downstream_OneMessage_Robot_2eproto.base);
  targetdeviceaddress_ = 0u;
  clear_has_sub_message();
}

Downstream_OneMessage::~Downstream_OneMessage() {
  // @@protoc_insertion_point(destructor:robot_control_interface.Downstream.OneMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Downstream_OneMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_sub_message()) {
    clear_sub_message();
  }
}

void Downstream_OneMessage::ArenaDtor(void* object) {
  Downstream_OneMessage* _this = reinterpret_cast< Downstream_OneMessage* >(object);
  (void)_this;
}
void Downstream_OneMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Downstream_OneMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Downstream_OneMessage& Downstream_OneMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Downstream_OneMessage_Robot_2eproto.base);
  return *internal_default_instance();
}


void Downstream_OneMessage::clear_sub_message() {
// @@protoc_insertion_point(one_of_clear_start:robot_control_interface.Downstream.OneMessage)
  switch (sub_message_case()) {
    case kRequestValues: {
      if (GetArena() == nullptr) {
        delete sub_message_.request_values_;
      }
      break;
    }
    case kSetAxisRobotArm: {
      if (GetArena() == nullptr) {
        delete sub_message_.set_axis_robot_arm_;
      }
      break;
    }
    case kClearQueueRobotArm: {
      if (GetArena() == nullptr) {
        delete sub_message_.clear_queue_robot_arm_;
      }
      break;
    }
    case SUB_MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SUB_MESSAGE_NOT_SET;
}


void Downstream_OneMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:robot_control_interface.Downstream.OneMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetdeviceaddress_ = 0u;
  clear_sub_message();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Downstream_OneMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 TargetDeviceAddress = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          targetdeviceaddress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .robot_control_interface.Downstream.RequestValues request_values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_request_values(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .robot_control_interface.Downstream.SetAxisRobotArm set_axis_robot_arm = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_set_axis_robot_arm(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .robot_control_interface.Downstream.ClearQueueRobotArm clear_queue_robot_arm = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_clear_queue_robot_arm(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Downstream_OneMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:robot_control_interface.Downstream.OneMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TargetDeviceAddress = 1;
  if (this->targetdeviceaddress() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_targetdeviceaddress(), target);
  }

  // .robot_control_interface.Downstream.RequestValues request_values = 2;
  if (_internal_has_request_values()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::request_values(this), target, stream);
  }

  // .robot_control_interface.Downstream.SetAxisRobotArm set_axis_robot_arm = 3;
  if (_internal_has_set_axis_robot_arm()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::set_axis_robot_arm(this), target, stream);
  }

  // .robot_control_interface.Downstream.ClearQueueRobotArm clear_queue_robot_arm = 4;
  if (_internal_has_clear_queue_robot_arm()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::clear_queue_robot_arm(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robot_control_interface.Downstream.OneMessage)
  return target;
}

size_t Downstream_OneMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robot_control_interface.Downstream.OneMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 TargetDeviceAddress = 1;
  if (this->targetdeviceaddress() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_targetdeviceaddress());
  }

  switch (sub_message_case()) {
    // .robot_control_interface.Downstream.RequestValues request_values = 2;
    case kRequestValues: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sub_message_.request_values_);
      break;
    }
    // .robot_control_interface.Downstream.SetAxisRobotArm set_axis_robot_arm = 3;
    case kSetAxisRobotArm: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sub_message_.set_axis_robot_arm_);
      break;
    }
    // .robot_control_interface.Downstream.ClearQueueRobotArm clear_queue_robot_arm = 4;
    case kClearQueueRobotArm: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *sub_message_.clear_queue_robot_arm_);
      break;
    }
    case SUB_MESSAGE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Downstream_OneMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robot_control_interface.Downstream.OneMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Downstream_OneMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Downstream_OneMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robot_control_interface.Downstream.OneMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robot_control_interface.Downstream.OneMessage)
    MergeFrom(*source);
  }
}

void Downstream_OneMessage::MergeFrom(const Downstream_OneMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robot_control_interface.Downstream.OneMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetdeviceaddress() != 0) {
    _internal_set_targetdeviceaddress(from._internal_targetdeviceaddress());
  }
  switch (from.sub_message_case()) {
    case kRequestValues: {
      _internal_mutable_request_values()->::robot_control_interface::Downstream_RequestValues::MergeFrom(from._internal_request_values());
      break;
    }
    case kSetAxisRobotArm: {
      _internal_mutable_set_axis_robot_arm()->::robot_control_interface::Downstream_SetAxisRobotArm::MergeFrom(from._internal_set_axis_robot_arm());
      break;
    }
    case kClearQueueRobotArm: {
      _internal_mutable_clear_queue_robot_arm()->::robot_control_interface::Downstream_ClearQueueRobotArm::MergeFrom(from._internal_clear_queue_robot_arm());
      break;
    }
    case SUB_MESSAGE_NOT_SET: {
      break;
    }
  }
}

void Downstream_OneMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robot_control_interface.Downstream.OneMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Downstream_OneMessage::CopyFrom(const Downstream_OneMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robot_control_interface.Downstream.OneMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Downstream_OneMessage::IsInitialized() const {
  return true;
}

void Downstream_OneMessage::InternalSwap(Downstream_OneMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(targetdeviceaddress_, other->targetdeviceaddress_);
  swap(sub_message_, other->sub_message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Downstream_OneMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Downstream::InitAsDefaultInstance() {
}
class Downstream::_Internal {
 public:
};

Downstream::Downstream(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  message_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:robot_control_interface.Downstream)
}
Downstream::Downstream(const Downstream& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      message_(from.message_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:robot_control_interface.Downstream)
}

void Downstream::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Downstream_Robot_2eproto.base);
}

Downstream::~Downstream() {
  // @@protoc_insertion_point(destructor:robot_control_interface.Downstream)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Downstream::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Downstream::ArenaDtor(void* object) {
  Downstream* _this = reinterpret_cast< Downstream* >(object);
  (void)_this;
}
void Downstream::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Downstream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Downstream& Downstream::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Downstream_Robot_2eproto.base);
  return *internal_default_instance();
}


void Downstream::Clear() {
// @@protoc_insertion_point(message_clear_start:robot_control_interface.Downstream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Downstream::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .robot_control_interface.Downstream.OneMessage message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_message(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Downstream::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:robot_control_interface.Downstream)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .robot_control_interface.Downstream.OneMessage message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_message_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_message(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:robot_control_interface.Downstream)
  return target;
}

size_t Downstream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:robot_control_interface.Downstream)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .robot_control_interface.Downstream.OneMessage message = 1;
  total_size += 1UL * this->_internal_message_size();
  for (const auto& msg : this->message_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Downstream::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:robot_control_interface.Downstream)
  GOOGLE_DCHECK_NE(&from, this);
  const Downstream* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Downstream>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:robot_control_interface.Downstream)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:robot_control_interface.Downstream)
    MergeFrom(*source);
  }
}

void Downstream::MergeFrom(const Downstream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:robot_control_interface.Downstream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  message_.MergeFrom(from.message_);
}

void Downstream::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:robot_control_interface.Downstream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Downstream::CopyFrom(const Downstream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:robot_control_interface.Downstream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Downstream::IsInitialized() const {
  return true;
}

void Downstream::InternalSwap(Downstream* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.InternalSwap(&other->message_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Downstream::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace robot_control_interface
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::robot_control_interface::Axis* Arena::CreateMaybeMessage< ::robot_control_interface::Axis >(Arena* arena) {
  return Arena::CreateMessageInternal< ::robot_control_interface::Axis >(arena);
}
template<> PROTOBUF_NOINLINE ::robot_control_interface::Upstream_DeviceDescription* Arena::CreateMaybeMessage< ::robot_control_interface::Upstream_DeviceDescription >(Arena* arena) {
  return Arena::CreateMessageInternal< ::robot_control_interface::Upstream_DeviceDescription >(arena);
}
template<> PROTOBUF_NOINLINE ::robot_control_interface::Upstream_ValuesRobotArm* Arena::CreateMaybeMessage< ::robot_control_interface::Upstream_ValuesRobotArm >(Arena* arena) {
  return Arena::CreateMessageInternal< ::robot_control_interface::Upstream_ValuesRobotArm >(arena);
}
template<> PROTOBUF_NOINLINE ::robot_control_interface::Upstream_ValuesLightSensor* Arena::CreateMaybeMessage< ::robot_control_interface::Upstream_ValuesLightSensor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::robot_control_interface::Upstream_ValuesLightSensor >(arena);
}
template<> PROTOBUF_NOINLINE ::robot_control_interface::Upstream_OneMessage* Arena::CreateMaybeMessage< ::robot_control_interface::Upstream_OneMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::robot_control_interface::Upstream_OneMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::robot_control_interface::Upstream* Arena::CreateMaybeMessage< ::robot_control_interface::Upstream >(Arena* arena) {
  return Arena::CreateMessageInternal< ::robot_control_interface::Upstream >(arena);
}
template<> PROTOBUF_NOINLINE ::robot_control_interface::Downstream_RequestValues* Arena::CreateMaybeMessage< ::robot_control_interface::Downstream_RequestValues >(Arena* arena) {
  return Arena::CreateMessageInternal< ::robot_control_interface::Downstream_RequestValues >(arena);
}
template<> PROTOBUF_NOINLINE ::robot_control_interface::Downstream_SetAxisRobotArm* Arena::CreateMaybeMessage< ::robot_control_interface::Downstream_SetAxisRobotArm >(Arena* arena) {
  return Arena::CreateMessageInternal< ::robot_control_interface::Downstream_SetAxisRobotArm >(arena);
}
template<> PROTOBUF_NOINLINE ::robot_control_interface::Downstream_ClearQueueRobotArm* Arena::CreateMaybeMessage< ::robot_control_interface::Downstream_ClearQueueRobotArm >(Arena* arena) {
  return Arena::CreateMessageInternal< ::robot_control_interface::Downstream_ClearQueueRobotArm >(arena);
}
template<> PROTOBUF_NOINLINE ::robot_control_interface::Downstream_OneMessage* Arena::CreateMaybeMessage< ::robot_control_interface::Downstream_OneMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::robot_control_interface::Downstream_OneMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::robot_control_interface::Downstream* Arena::CreateMaybeMessage< ::robot_control_interface::Downstream >(Arena* arena) {
  return Arena::CreateMessageInternal< ::robot_control_interface::Downstream >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
